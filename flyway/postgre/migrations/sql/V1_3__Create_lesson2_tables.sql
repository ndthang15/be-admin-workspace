DROP TABLE IF EXISTS public."user_role_relation";
DROP TABLE IF EXISTS public."user_organization_relation";
DROP TABLE IF EXISTS public."sso_role";
DROP TABLE IF EXISTS public."sso_user_profile";
DROP TABLE IF EXISTS public."sso_organization";
DROP TABLE IF EXISTS public."sso_user";


DROP TYPE IF EXISTS user_status;
CREATE TYPE user_status AS ENUM ('active', 'deactivated', 'delete');

CREATE TABLE IF NOT EXISTS public."sso_user"
(
    user_id bigint NOT NULL GENERATED BY DEFAULT AS identity,
    user_name text NOT NULL,
    password text NOT NULL,
    email text,
    kvp json,
    date_created TIMESTAMP,
    date_modified TIMESTAMP,
    modified_by bigint,
    last_logged_in TIMESTAMP,
    user_settings json default '{}'::json,
    status user_status NOT NULL DEFAULT 'active',
    CONSTRAINT sso_user_pk PRIMARY KEY (user_id)
);

DROP TYPE IF EXISTS organization_status;
CREATE TYPE organization_status AS ENUM ('active', 'suspended', 'deleted');

CREATE TABLE IF NOT EXISTS public."sso_organization"
(
    organization_id bigint NOT NULL GENERATED BY DEFAULT AS identity,
    organization_name text NOT NULL,
    kvp json,
    date_created TIMESTAMP,
    date_modified TIMESTAMP,
    status organization_status NOT NULL DEFAULT 'active',
    address text,
    contact_number text,
    email text,
    country text,
    state text,
    city text,
    postal_code text,
    organization_sub_name text,
    website_url text,
    CONSTRAINT sso_organization_pk PRIMARY KEY (organization_id)
);

CREATE TABLE IF NOT EXISTS public."sso_role"
(
    role_id bigint NOT NULL GENERATED BY DEFAULT AS identity,
    role_name text NOT NULL,
    role_description text,
    organization_id bigint references sso_organization(organization_id),
    CONSTRAINT sso_role_pk PRIMARY KEY (role_id)
);

DROP TYPE IF EXISTS gender;
CREATE TYPE gender AS ENUM ('male', 'female');

CREATE TABLE IF NOT EXISTS public."sso_user_profile"
(
    profile_id bigint NOT NULL GENERATED BY DEFAULT AS identity,
    user_id bigint references sso_user(user_id),
    birth_date DATE,
    sex gender NOT NULL,
    title text,
    first_name text NOT NULL,
    last_name text NOT NULL,
    avatar text,
    age int,
    address text,
    date_created TIMESTAMP,
    CONSTRAINT sso_user_profile_pk PRIMARY KEY (profile_id)
);

CREATE TABLE IF NOT EXISTS public."user_organization_relation"
(
    user_id bigint references sso_user(user_id),
    organization_id bigint references sso_organization(organization_id),
    UNIQUE (user_id, organization_id)
);

CREATE TABLE IF NOT EXISTS public."user_role_relation"
(
    user_id bigint references sso_user(user_id),
    role_id bigint references sso_role(role_id),
    UNIQUE (user_id, role_id)
);

